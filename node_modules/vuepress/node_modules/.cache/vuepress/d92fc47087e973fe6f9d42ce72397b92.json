{"remainingRequest":"E:\\practiceProject\\blog\\my-blog\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!E:\\practiceProject\\blog\\my-blog\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!E:\\practiceProject\\blog\\my-blog\\node_modules\\vue-loader\\lib\\index.js??ref--1-1!E:\\practiceProject\\blog\\my-blog\\node_modules\\vuepress\\lib\\webpack\\markdownLoader.js??ref--1-2!E:\\practiceProject\\blog\\my-blog\\docs\\vuesource\\base.md?vue&type=template&id=ef2f98f0&","dependencies":[{"path":"E:\\practiceProject\\blog\\my-blog\\docs\\vuesource\\base.md","mtime":1547044221583},{"path":"E:\\practiceProject\\blog\\my-blog\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\practiceProject\\blog\\my-blog\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"E:\\practiceProject\\blog\\my-blog\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\practiceProject\\blog\\my-blog\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\practiceProject\\blog\\my-blog\\node_modules\\vuepress\\lib\\webpack\\markdownLoader.js","mtime":1533872387000}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _vm._m(0)\n}\nvar staticRenderFns = [\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"content\" }, [\n      _c(\"h1\", { attrs: { id: \"第一课\" } }, [\n        _c(\n          \"a\",\n          {\n            staticClass: \"header-anchor\",\n            attrs: { href: \"#第一课\", \"aria-hidden\": \"true\" }\n          },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" 第一课\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [\n        _vm._v(\"电子书课件：https://ustbhuangyi.github.io/vue-analysis/\"),\n        _c(\"br\"),\n        _vm._v(\"\\n做什么？哪些内容？技术栈？\"),\n        _c(\"br\"),\n        _vm._v(\"\\n核心：数据驱动、组件化、响应式原理\"),\n        _c(\"br\"),\n        _vm._v(\"\\n编译：parse、optimize、codegen\"),\n        _c(\"br\"),\n        _vm._v(\"\\n扩展：event、v-model、slot、keep-alive、transition...\"),\n        _c(\"br\"),\n        _vm._v(\"\\n生态： vue-router、vuex\"),\n        _c(\"br\"),\n        _vm._v(\"\\n一、认识FLow\"),\n        _c(\"br\"),\n        _vm._v(\" \"),\n        _c(\"code\", [\n          _vm._v(\n            \"Flow是facebook出品的JavaScript静态类型检查工具。Vue.js的源码利用Flow做了静态类型检查，所以了解Flow有助于我们阅读源码。 类型检查是当前动态类型语言的发展趋势，而JavaScript是动态类型语言。所谓类型检查，就是在编译期尽早发现（由类型错误引起的）bug，又不影响代码运行。有利于大型项目的开发和维护。\"\n          )\n        ])\n      ]),\n      _vm._v(\" \"),\n      _c(\"pre\", [\n        _c(\"code\", [\n          _vm._v(\n            \"1、Flow的工作方式  \\n    类型推断：通过变量的使用上下文类推断出变量类型，然后根据这些推断来检查类型。  \\n    类型注释：事先注释我们期待的类型,Flow会基于这些注释来判断。\\n    安装flow    npm install -g flow-bin\\n    使用flow之前先flow init 创建.flowconfig文件\\n2、Flow在Vue.js源码中的应用。\\n\"\n          )\n        ])\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [_vm._v(\"二、Vue.js源码目录设计\")]),\n      _vm._v(\" \"),\n      _c(\"pre\", [\n        _c(\"code\", [\n          _vm._v(\n            \"        src   \\n    ├── compiler        # 编译相关 \\n    ├── core            # 核心代码 \\n    ├── platforms       # 不同平台的支持\\n    ├── server          # 服务端渲染\\n    ├── sfc             # .vue 文件解析\\n    ├── shared          # 共享代码\\n\"\n          )\n        ])\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [\n        _vm._v(\n          \"core 目录包含了 Vue.js 的核心代码，包括内置组件、全局 API 封装，Vue 实例化、观察者、虚拟 DOM、工具函数等等。\"\n        )\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [\n        _vm._v(\n          \"这里的代码可谓是 Vue.js 的灵魂，也是我们之后需要重点分析的地方。\"\n        ),\n        _c(\"br\"),\n        _vm._v(\n          \"\\n总结：从 Vue.js 的目录设计可以看到，作者把功能模块拆分的非常清楚，相关的逻辑放在一个独立的目录下维护，并且把复用的代码也抽成一个独立目录。\"\n        )\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [\n        _vm._v(\"三、vue源码构建\"),\n        _c(\"br\"),\n        _vm._v(\n          '\\nvue基于rollup构建工具构建的。webpack更强大，把图片，js，css编译成js.rollup更轻量级，只编译js.\\n\"build\": \"node scripts/build.js\",通过node命令执行scripts目录下的build.js\\n```\\nRuntime Only版本推荐。'\n        )\n      ])\n    ])\n  }\n]\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}