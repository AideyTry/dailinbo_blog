{"remainingRequest":"E:\\practiceProject\\blog\\my-blog\\node_modules\\vue-loader\\lib\\index.js??ref--1-1!E:\\practiceProject\\blog\\my-blog\\node_modules\\vuepress\\lib\\webpack\\markdownLoader.js??ref--1-2!E:\\practiceProject\\blog\\my-blog\\docs\\vue\\base.md?vue&type=template&id=2d45f46d&","dependencies":[{"path":"E:\\practiceProject\\blog\\my-blog\\docs\\vue\\base.md","mtime":1542727981822},{"path":"E:\\practiceProject\\blog\\my-blog\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\practiceProject\\blog\\my-blog\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"E:\\practiceProject\\blog\\my-blog\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\practiceProject\\blog\\my-blog\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\practiceProject\\blog\\my-blog\\node_modules\\vuepress\\lib\\webpack\\markdownLoader.js","mtime":1533872387000}],"contextDependencies":[],"result":["\n<div class=\"content\"><p>#vue基础知识</p>\n<p>1、模板语法</p>\n<!--beforebegin--><div class=\"language- extra-class\"><!--afterbegin--><pre v-pre class=\"language-text\"><code>  Mustache语法：{{}}\n  Html赋值：v-html\n  绑定属性: v-bind:id=&quot;&quot;  :id\n  使用表达式:  {{ok?&#39;yes&#39;:&#39;no&#39;}}\n  文本赋值: v-text=&quot;&quot;\n  指令v-if\n  过滤器:{{message | capitalize}} 和 v-bind:id=&quot;rawId | formatId&quot;\n</code></pre>\n<!--beforeend--></div><!--afterend--><p>2、Class和Style绑定</p>\n<!--beforebegin--><div class=\"language- extra-class\"><!--afterbegin--><pre v-pre class=\"language-text\"><code>  对象语法: v-bind:class=&quot;{ active: isActive, &#39;text-danger&#39;: hasError }&quot;&gt;\n\n  数组语法:&lt;div v-bind:class=&quot;[activeClass, errorClass]&quot;&gt;&lt;/div&gt;\n  data: {\n    activeClass: &#39;active&#39;,\n    errorClass: &#39;text-danger&#39;\n  }\n  &lt;div v-bind:class=&quot;[isActive ? activeClass : &#39;&#39;, errorClass]&quot;&gt;&lt;/div&gt;\n\n  style绑定对象语法：&lt;div v-bind:style=&quot;{ color: activeColor, fontSize: fontSize + &#39;px&#39; }&quot;&gt;&lt;/div&gt;\n  data: {\n    activeColor: &#39;red&#39;,\n    fontSize: 30\n  }\n</code></pre>\n<!--beforeend--></div><!--afterend--><p>3、条件渲染</p>\n<!--beforebegin--><div class=\"language- extra-class\"><!--afterbegin--><pre v-pre class=\"language-text\"><code>  v-if\n  v-else\n  v-else-if\n  v-show\n  v-cloak\n  [v-cloak] {\n  display: none;\n  }\n  &lt;div v-cloak&gt;\n    {{ message }}\n  &lt;/div&gt;\n</code></pre>\n<!--beforeend--></div><!--afterend--><p>4、vue事件处理器</p>\n<!--beforebegin--><div class=\"language- extra-class\"><!--afterbegin--><pre v-pre class=\"language-text\"><code>  v-on:click=&quot;greet&quot;或@click=&quot;greet&quot;\n\n  事件修饰符：\n  v-on:click.stop 阻止冒泡\n  v-on:click.stop.prevent 阻止默认事件（阻止按钮的默认事件，例如a标签让点击的打开新窗口或新页面失效）\n  v-on:click.self 给对象本身绑定事件，如果元素中有子元素，点击子元素是没有作用的。\n  v-on:click.once 只给事件绑定只生效一次\n\n  v-on:keyup.enter\n  enter/tab/delete(捕获删除和退格键)/esc/space/up/down/left/right\n\n</code></pre>\n<!--beforeend--></div><!--afterend--><p>5、Vue组件</p>\n<!--beforebegin--><div class=\"language- extra-class\"><!--afterbegin--><pre v-pre class=\"language-text\"><code>  全局组件和局部组件\n  SPA一般是局部组件，多页面会有\n\n  父子组件通讯-数据传递\n  (组件单向流，只允许父组件传递给子组件数据不允许子组件修改父组件变量，因为组件之间嵌套很复杂，为了防止紊乱。但可以通过$emit变相更改)\n\n  Slot\n</code></pre>\n<!--beforeend--></div><!--afterend--></div>\n",null]}